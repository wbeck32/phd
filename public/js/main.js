function hideMail(){console.log("obfuscation");document.write("<a href=mailto:user@domain.tldccc>Email (concatenation)</a><br>")}function scrollToProductSection(e){console.log(e),$(".responsiveHeader").css({visibility:"hidden",display:"none"}),$("section.allsections").not(e).css({visibility:"hidden",display:"none"}),$("section#products.allsections").css({visibility:"visible",display:"block"}),$("div.product").not(e).css({visibility:"hidden",display:"none"}),$("div"+e+".product").css({visibility:"visible",display:"block"}),$("#products").animate({scrollTop:0},"slow",function(){})}function validateForm(e){var t,s,i=(e=e||window.event).target?e.target:e.srcElement,r=!0;for(t=0;t<i.elements;t++)"INPUT"!==(s=i.elements[t]).nodeName&&"TEXTAREA"!==s.nodeName&&"SELECT"!==s.nodeName||(void 0!==s.willValidate?("INPUT"===s.nodeName&&s.type!==s.getAttribute("type")&&s.setCustomValidity(LegacyValidation(s)?"":"error"),s.checkValidity()):(s.validity=s.validity||{},s.validity.valid=LegacyValidation(s)),s.validity.valid||(r=!1));return r||e.preventDefault&&e.preventDefault(),r}function LegacyValidation(e){var t=!0,s=e.value,i=e.getAttribute("type"),r="checkbox"===i||"radio"===i,a=e.getAttribute("required"),n=e.getAttribute("minlength"),o=e.getAttribute("maxlength"),l=e.getAttribute("pattern");return e.disabled?t:(t=t&&(!a||r&&e.checked||!r&&""!==s),(t=t&&(r||(!n||s.length>=n)&&(!o||s.length<=o)))&&l&&(t=(l=new RegExp(l)).test(s)),t)}$(".footerTxt.col-md-4.col-sm-3 p").click(function(){console.log("email"),$.ajax({url:"https://app.mailgun.com/app/domains/sandbox780dc44ce44a41da8a4266b80ff20b2e.mailgun.org/messages",method:POST,beforeSend:function(e){e.overrideMimeType("text/plain; charset=x-user-defined")}}).done(function(e){console&&console.log&&console.log("Sample of data:",e.slice(0,100))})}),$("ul.nav.navbar-nav li a").click(function(){var e=$(this).attr("href");if("#moretop"==e){var t=$(this).find("ul li a").attr("href");$("section"+t).animate({scrollTop:0},"slow",function(){})}else"#product1"==e||"#product2"==e||"#product3"==e||"#product4"==e?scrollToProductSection(e):"#home"==e?($("#collapsedMenu.in").removeClass("in"),$("section.allsections").css({visibility:"hidden",display:"none"}),$("div.pageBody div.responsiveHeader").css({visibility:"visible",display:"block"}),$("html, body").animate({scrollTop:0},"slow",function(){})):void 0!==e&&($("#collapsedMenu.in").removeClass("in"),$(".responsiveHeader").css({visibility:"hidden",display:"none"}),$("section.allsections").not(e).css({visibility:"hidden",display:"none"}),$("section"+e+".allsections").css({display:"block",visibility:"visible"}),$("section"+e+".allsections").animate({scrollTop:0},"slow",function(){}))}),$(".navbar-brand").click(function(){$(".responsiveHeader").css({visibility:"visible",display:"inline-block"}),$("section").css({visibility:"hidden",display:"none"}),$("html, body").animate({scrollTop:0},"slow",function(){})}),$(".col-xs-3.col-md-4").click(function(){scrollToProductSection($(this).find("a").attr("href"))}),$(".product .sectionheader a").click(function(){$("#collapsedMenu.in").removeClass("in"),scrollToProductSection($(this).attr("href"))}),$("#shareRoundIcons").jsSocials({shares:["email","twitter","facebook","linkedin","messenger"],url:"http://artisanmemoirs.com",text:"text to share",showLabel:!1,showCount:!1,shareIn:"popup",on:{click:function(e){},mouseenter:function(e){},mouseleave:function(e){}}}),$(".btn.contactForm").click(function(){console.log("clicky")});var form=document.getElementById("contactUs");form.noValidate=!0,form.onsubmit=validateForm,function(e,t,s){function i(e,s){var i=t(e);i.data(r,this),this._$element=i,this.shares=[],this._init(s),this._render()}var r="JSSocials",a=function(e,s){return t.isFunction(e)?e.apply(s,t.makeArray(arguments).slice(2)):e},n=/(\.(jpeg|png|gif|bmp|svg)$|^data:image\/(jpeg|png|gif|bmp|svg\+xml);base64)/i,o=/(&?[a-zA-Z0-9]+=)?\{([a-zA-Z0-9]+)\}/g,l={G:1e9,M:1e6,K:1e3},c={};i.prototype={url:"",text:"",shareIn:"blank",showLabel:function(e){return!1===this.showCount?e>this.smallScreenWidth:e>=this.largeScreenWidth},showCount:function(e){return!(e<=this.smallScreenWidth)||"inside"},smallScreenWidth:640,largeScreenWidth:1024,resizeTimeout:200,elementClass:"jssocials",sharesClass:"jssocials-shares",shareClass:"jssocials-share",shareButtonClass:"jssocials-share-button",shareLinkClass:"jssocials-share-link",shareLogoClass:"jssocials-share-logo",shareLabelClass:"jssocials-share-label",shareLinkCountClass:"jssocials-share-link-count",shareCountBoxClass:"jssocials-share-count-box",shareCountClass:"jssocials-share-count",shareZeroCountClass:"jssocials-share-no-count",_init:function(e){this._initDefaults(),t.extend(this,e),this._initShares(),this._attachWindowResizeCallback()},_initDefaults:function(){this.url=e.location.href,this.text=t.trim(t("meta[name=description]").attr("content")||t("title").text())},_initShares:function(){this.shares=t.map(this.shares,t.proxy(function(e){"string"==typeof e&&(e={share:e});var s=e.share&&c[e.share];if(!s&&!e.renderer)throw Error("Share '"+e.share+"' is not found");return t.extend({url:this.url,text:this.text},s,e)},this))},_attachWindowResizeCallback:function(){t(e).on("resize",t.proxy(this._windowResizeHandler,this))},_detachWindowResizeCallback:function(){t(e).off("resize",this._windowResizeHandler)},_windowResizeHandler:function(){(t.isFunction(this.showLabel)||t.isFunction(this.showCount))&&(e.clearTimeout(this._resizeTimer),this._resizeTimer=setTimeout(t.proxy(this.refresh,this),this.resizeTimeout))},_render:function(){this._clear(),this._defineOptionsByScreen(),this._$element.addClass(this.elementClass),this._$shares=t("<div>").addClass(this.sharesClass).appendTo(this._$element),this._renderShares()},_defineOptionsByScreen:function(){this._screenWidth=t(e).width(),this._showLabel=a(this.showLabel,this,this._screenWidth),this._showCount=a(this.showCount,this,this._screenWidth)},_renderShares:function(){t.each(this.shares,t.proxy(function(e,t){this._renderShare(t)},this))},_renderShare:function(e){(t.isFunction(e.renderer)?t(e.renderer()):this._createShare(e)).addClass(this.shareClass).addClass(e.share?"jssocials-share-"+e.share:"").addClass(e.css).appendTo(this._$shares)},_createShare:function(e){var s=t("<div>"),i=this._createShareLink(e).appendTo(s);if(this._showCount){var r="inside"===this._showCount,a=r?i:t("<div>").addClass(this.shareCountBoxClass).appendTo(s);a.addClass(r?this.shareLinkCountClass:this.shareCountBoxClass),this._renderShareCount(e,a)}return s},_createShareLink:function(e){var s=this._getShareStrategy(e).call(e,{shareUrl:this._getShareUrl(e)});return s.addClass(this.shareLinkClass).append(this._createShareLogo(e)),this._showLabel&&s.append(this._createShareLabel(e)),t.each(this.on||{},function(i,r){t.isFunction(r)&&s.on(i,t.proxy(r,e))}),s},_getShareStrategy:function(e){var t=h[e.shareIn||this.shareIn];if(!t)throw Error("Share strategy '"+this.shareIn+"' not found");return t},_getShareUrl:function(e){var t=a(e.shareUrl,e);return this._formatShareUrl(t,e)},_createShareLogo:function(e){var s=e.logo,i=n.test(s)?t("<img>").attr("src",e.logo):t("<i>").addClass(s);return i.addClass(this.shareLogoClass),i},_createShareLabel:function(e){return t("<span>").addClass(this.shareLabelClass).text(e.label)},_renderShareCount:function(e,s){var i=t("<span>").addClass(this.shareCountClass);s.addClass(this.shareZeroCountClass).append(i),this._loadCount(e).done(t.proxy(function(e){e&&(s.removeClass(this.shareZeroCountClass),i.text(e))},this))},_loadCount:function(e){var s=t.Deferred(),i=this._getCountUrl(e);if(!i)return s.resolve(0).promise();var r=t.proxy(function(t){s.resolve(this._getCountValue(t,e))},this);return t.getJSON(i).done(r).fail(function(){t.get(i).done(r).fail(function(){s.resolve(0)})}),s.promise()},_getCountUrl:function(e){var t=a(e.countUrl,e);return this._formatShareUrl(t,e)},_getCountValue:function(e,s){var i=(t.isFunction(s.getCount)?s.getCount(e):e)||0;return"string"==typeof i?i:this._formatNumber(i)},_formatNumber:function(e){return t.each(l,function(t,s){if(e>=s)return e=parseFloat((e/s).toFixed(2))+t,!1}),e},_formatShareUrl:function(t,s){return t.replace(o,function(t,i,r){var a=s[r]||"";return a?(i||"")+e.encodeURIComponent(a):""})},_clear:function(){e.clearTimeout(this._resizeTimer),this._$element.empty()},_passOptionToShares:function(e,s){var i=this.shares;t.each(["url","text"],function(r,a){a===e&&t.each(i,function(t,i){i[e]=s})})},_normalizeShare:function(e){return t.isNumeric(e)?this.shares[e]:"string"==typeof e?t.grep(this.shares,function(t){return t.share===e})[0]:e},refresh:function(){this._render()},destroy:function(){this._clear(),this._detachWindowResizeCallback(),this._$element.removeClass(this.elementClass).removeData(r)},option:function(e,t){if(1===arguments.length)return this[e];this[e]=t,this._passOptionToShares(e,t),this.refresh()},shareOption:function(e,t,s){if(e=this._normalizeShare(e),2===arguments.length)return e[t];e[t]=s,this.refresh()}},t.fn.jsSocials=function(e){var s=t.makeArray(arguments).slice(1),a=this;return this.each(function(){var n,o=t(this),l=o.data(r);if(l)if("string"==typeof e){if(void 0!==(n=l[e].apply(l,s))&&n!==l)return a=n,!1}else l._detachWindowResizeCallback(),l._init(e),l._render();else new i(o,e)}),a};var h={popup:function(s){return t("<a>").attr("href","#").on("click",function(){return e.open(s.shareUrl,null,"width=600, height=400, location=0, menubar=0, resizeable=0, scrollbars=0, status=0, titlebar=0, toolbar=0"),!1})},blank:function(e){return t("<a>").attr({target:"_blank",href:e.shareUrl})},self:function(e){return t("<a>").attr({target:"_self",href:e.shareUrl})}};e.jsSocials={Socials:i,shares:c,shareStrategies:h,setDefaults:function(e){var s;t.isPlainObject(e)?s=i.prototype:(s=c[e],e=arguments[1]||{}),t.extend(s,e)}}}(window,jQuery),function(e,t,s,i){jQuery.extend(s.shares,{email:{label:"E-mail",logo:"fa fa-at",shareUrl:"mailto:{to}?subject={text}&body={url}",countUrl:"",shareIn:"self"},twitter:{label:"Tweet",logo:"fa fa-twitter",shareUrl:"https://twitter.com/share?url={url}&text={text}&via={via}&hashtags={hashtags}",countUrl:""},facebook:{label:"Like",logo:"fa fa-facebook",shareUrl:"https://facebook.com/sharer/sharer.php?u={url}",countUrl:"https://graph.facebook.com/?id={url}",getCount:function(e){return e.share&&e.share.share_count||0}},vkontakte:{label:"Like",logo:"fa fa-vk",shareUrl:"https://vk.com/share.php?url={url}&title={title}&description={text}",countUrl:"https://vk.com/share.php?act=count&index=1&url={url}",getCount:function(e){return parseInt(e.slice(15,-2).split(", ")[1])}},googleplus:{label:"+1",logo:"fa fa-google",shareUrl:"https://plus.google.com/share?url={url}",countUrl:""},linkedin:{label:"Share",logo:"fa fa-linkedin",shareUrl:"https://www.linkedin.com/shareArticle?mini=true&url={url}",countUrl:"https://www.linkedin.com/countserv/count/share?format=jsonp&url={url}&callback=?",getCount:function(e){return e.count}},pinterest:{label:"Pin it",logo:"fa fa-pinterest",shareUrl:"https://pinterest.com/pin/create/bookmarklet/?media={media}&url={url}&description={text}",countUrl:"https://api.pinterest.com/v1/urls/count.json?&url={url}&callback=?",getCount:function(e){return e.count}},stumbleupon:{label:"Share",logo:"fa fa-stumbleupon",shareUrl:"http://www.stumbleupon.com/submit?url={url}&title={title}",countUrl:"https://cors-anywhere.herokuapp.com/https://www.stumbleupon.com/services/1.01/badge.getinfo?url={url}",getCount:function(e){return e.result.views}},telegram:{label:"Telegram",logo:"fa fa-paper-plane",shareUrl:"tg://msg?text={url} {text}",countUrl:"",shareIn:"self"},whatsapp:{label:"WhatsApp",logo:"fa fa-whatsapp",shareUrl:"whatsapp://send?text={url} {text}",countUrl:"",shareIn:"self"},line:{label:"LINE",logo:"fa fa-comment",shareUrl:"http://line.me/R/msg/text/?{text} {url}",countUrl:""},viber:{label:"Viber",logo:"fa fa-volume-control-phone",shareUrl:"viber://forward?text={url} {text}",countUrl:"",shareIn:"self"},pocket:{label:"Pocket",logo:"fa fa-get-pocket",shareUrl:"https://getpocket.com/save?url={url}&title={title}",countUrl:""},messenger:{label:"Share",logo:"fa fa-commenting",shareUrl:"fb-messenger://share?link={url}",countUrl:"",shareIn:"self"}})}(window,0,window.jsSocials);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
